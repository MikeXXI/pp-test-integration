name: Build, Test and Deploy React Application

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    permissions: # Job-level permissions configuration starts here
      contents: write # 'write' access to repository contents
      pull-requests: write # 'write' access to pull requests
      actions: write # 'write' access to workflow runs
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [21.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: npm ci, build and test
        run: |
          npm ci
          npm run build --if-present
          npm run test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          slug: MikeXXI/pp-test-integration

      - name: Generate jsdoc
        run: npm run jsdoc
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: build
          if-no-files-found: error
      # Generate version
      - name: Set variable
        run: |
          BUILD_NUMBER=${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          echo "Build number: $BUILD_NUMBER"
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "Latest tag: $LATEST_TAG"
      - name: Generate version with tag, id workflow, number of run and number of attempts
        id: version
        run: |
          git config --local user.email "mickael.djegherif@outlook.fr"
          git config --local user.name "Mike"
          git tag "${env.LATEST_TAG}-{$env.BUILD_NUMBER}" -a -m "Build: ${env.BUILD_NUMBER}"
          git tag
          



  # Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    
    # Add a dependency to the build job
    needs: build_test
    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2